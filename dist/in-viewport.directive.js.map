{"version":3,"file":"in-viewport.directive.js","sourceRoot":"","sources":["../src/in-viewport.directive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;IAAA,sCAA6G;IAC7G,6DAA0D;IAO1D,IAAM,cAAc,GAAqB;QACvC,OAAO,EAAE,IAAI;QACb,SAAS,EAAE,MAAM;KAClB,CAAC;IAKF,IAAa,mBAAmB;QAO9B,6BAAoB,UAAsB,EACtB,iBAAoC;YADpC,eAAU,GAAV,UAAU,CAAY;YACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;YACtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAY,EAAE,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;QAGD,sBAAI,6CAAY;iBAAhB,UAAiB,KAAuB;gBACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC;;;WAAA;QAED,6CAAe,GAAf;YAAA,iBAMC;YALC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEjB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAChE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ;iBAChD,SAAS,CAAC,UAAC,OAAmB,IAAK,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;QACtD,CAAC;QAED,yCAAW,GAAX;YACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YACnE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAClC,CAAC;QAED,mCAAK,GAAL,UAAM,KAAe;YACnB,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YAEzC,IAAM,MAAM,GAAG,CAAC,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;YAElD,IAAM,GAAG,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC;YAEvC,IAAM,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM,CAAC,UAAU;gBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;aAC3B,CAAC;YAEF,IAAM,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;YACjD,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,CAAC;YAEvD,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC;YAClD,IAAM,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC;YAEpD,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;YACnE,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;YAEnE,IAAI,IAAI,GAAG,KAAK,CAAC;YAEjB,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9B,KAAK,UAAU;oBACb,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC;oBAC9B,KAAK,CAAC;gBACR,KAAK,YAAY;oBACf,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC;oBAC9B,KAAK,CAAC;gBACR;oBACE,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;YAC9C,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;QACH,CAAC;QAED,sCAAQ,GAAR;YACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;gBACrC,KAAK,EAAE,IAAI,CAAC,IAAI;aACjB,CAAC,CAAC;QACL,CAAC;QACH,0BAAC;IAAD,CAAC,AA9ED,IA8EC;IAzEuB;QAArB,aAAM,CAAC,YAAY,CAAC;kCAAiB,mBAAY;wDAAM;IAUxD;QADC,YAAK,CAAC,mBAAmB,CAAC;;;2DAG1B;IAjBU,mBAAmB;QAH/B,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;SAC1B,CAAC;yCAQgC,iBAAU;YACH,uCAAiB;OAR7C,mBAAmB,CA8E/B;IA9EY,kDAAmB","sourcesContent":["import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { InViewportService } from \"./in-viewport.service\";\n\nexport interface InViewportConfig {\n  partial?: boolean;\n  direction?: 'both' | 'vertical' | 'horizontal';\n}\n\nconst DEFAULT_CONFIG: InViewportConfig = {\n  partial: true,\n  direction: 'both'\n};\n\n@Directive({\n  selector: '[in-viewport]'\n})\nexport class InViewportDirective implements AfterViewInit, OnDestroy {\n  private subscription: any;\n  private config: InViewportConfig;\n  private invp: boolean;\n\n  @Output('inViewport') public action$: EventEmitter<any>;\n\n  constructor(private elementRef: ElementRef,\n              private inViewportService: InViewportService) {\n    this.config = Object.assign({}, DEFAULT_CONFIG);\n    this.action$ = new EventEmitter();\n    this.invp = false;\n  }\n\n  @Input('inViewportOptions')\n  set updateConfig(value: InViewportConfig) {\n    this.config = Object.assign(this.config, value);\n  }\n\n  ngAfterViewInit() {\n    this.check(true);\n\n    this.inViewportService.addTarget(this.elementRef.nativeElement);\n    this.subscription = this.inViewportService.trigger$\n      .subscribe((entries: Array<any>) => this.check());\n  }\n\n  ngOnDestroy() {\n    this.inViewportService.removeTarget(this.elementRef.nativeElement);\n    this.subscription.unsubscribe();\n  }\n\n  check(force?: boolean) {\n    const el = this.elementRef.nativeElement;\n\n    const elSize = (el.offsetWidth * el.offsetHeight);\n\n    const rec = el.getBoundingClientRect();\n\n    const vp = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    const tViz = rec.top >= 0 && rec.top < vp.height;\n    const bViz = rec.bottom > 0 && rec.bottom <= vp.height;\n\n    const lViz = rec.left >= 0 && rec.left < vp.width;\n    const rViz = rec.right > 0 && rec.right <= vp.width;\n\n    const vVisible = this.config.partial ? tViz || bViz : tViz && bViz;\n    const hVisible = this.config.partial ? lViz || rViz : lViz && rViz;\n\n    let invp = false;\n\n    switch (this.config.direction) {\n      case 'vertical':\n        invp = !!(elSize && vVisible);\n        break;\n      case 'horizontal':\n        invp = !!(elSize && hVisible);\n        break;\n      default:\n        invp = !!(elSize && vVisible && hVisible);\n    }\n\n    if (force || this.invp !== invp) {\n      this.invp = invp;\n      this.onChange();\n    }\n  }\n\n  onChange() {\n    this.action$.emit({\n      target: this.elementRef.nativeElement,\n      value: this.invp\n    });\n  }\n}\n"]}