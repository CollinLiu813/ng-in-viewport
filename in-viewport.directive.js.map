{"version":3,"file":"in-viewport.directive.js","sourceRoot":"","sources":["in-viewport.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, OnInit, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\n\n@Directive({\n  selector: '[in-viewport]'\n})\n\nexport class InViewport implements OnInit {\n  @Output('inViewport') inViewport:EventEmitter<Object>;\n\n  constructor(private _el:ElementRef) {\n    this.inViewport = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.isInViewport();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onViewportResize(event:Event) {\n    window.requestAnimationFrame(() => {\n      this.isInViewport();\n    });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onViewportScroll(event:Event) {\n    window.requestAnimationFrame(() => {\n      this.isInViewport();\n    });\n  }\n\n  isInViewport(partial:boolean = true, direction:string = 'both') {\n    const el = this._el.nativeElement;\n\n    const elSize = (el.offsetWidth * el.offsetHeight);\n\n    const rec = el.getBoundingClientRect();\n\n    const vp = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    const tViz = rec.top >= 0 && rec.top < vp.height;\n    const bViz = rec.bottom > 0 && rec.bottom <= vp.height;\n\n    const lViz = rec.left >= 0 && rec.left < vp.width;\n    const rViz = rec.right > 0 && rec.right <= vp.width;\n\n    const vVisible = partial ? tViz || bViz : tViz && bViz;\n    const hVisible = partial ? lViz || rViz : lViz && rViz;\n\n    let event = {\n      target: el,\n      value: false\n    };\n\n    if (direction === 'both') {\n      event['value'] = (elSize && vVisible && hVisible) ? true : false;\n    }\n    else if (direction === 'vertical') {\n      event['value'] = (elSize && vVisible) ? true : false;\n    }\n    else if (direction === 'horizontal') {\n      event['value'] = (elSize && hVisible) ? true : false;\n    }\n\n    this.inViewport.emit(event);\n  }\n}\n"]}
